Description: Test plan for configurator.js

--------------------------------------------------------------------------------
testName: setConfigurationSetting_validData
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be set)
input configurationName: string (The key of the configuration setting)
input configurationValue: string|integer|boolean|double (The value of the configuration setting)
output: void

testName: setConfigurationSetting_inValidConfigurationNamespaceString
input configurationNamespace: string (dfxg24346dfg)
input configurationName: string (The key of the configuration setting)
input configurationValue: string|integer|boolean|double (The value of the configuration setting)
output: ?

testName: setConfigurationSetting_inValidConfigurationnameString
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be set)
input configurationName: string (dfxg24346dfg)
input configurationValue: string|integer|boolean|double (The value of the configuration setting)
output: ?

testName: setConfigurationSetting_inValidConfigurationValueString
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be set)
input configurationName: string (The key of the configuration setting)
input configurationValue: string (dfxg24346dfg)
output: ?

testName: setConfigurationSetting_inValidConfigurationNamespaceInteger
input configurationNamespace: integer (123)
input configurationName: string (The key of the configuration setting)
input configurationValue: string|integer|boolean|double (The value of the configuration setting)
output: ?

testName: setConfigurationSetting_inValidConfigurationNamespaceBoolean
input configurationNamespace: boolean (false)
input configurationName: string (The key of the configuration setting)
input configurationValue: string|integer|boolean|double (The value of the configuration setting)
output: ?

testName: setConfigurationSetting_inValidConfigurationNamespaceUndefined
input configurationNamespace: undefined
input configurationName: string (The key of the configuration setting)
input configurationValue: string|integer|boolean|double (The value of the configuration setting)
output: ?

testName: setConfigurationSetting_inValidConfigurationNamespaceNaN
input configurationNamespace: NaN
input configurationName: string (The key of the configuration setting)
input configurationValue: string|integer|boolean|double (The value of the configuration setting)
output: ?

testName: setConfigurationSetting_inValidConfigurationNameInteger
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be set)
input configurationName: integer (123)
input configurationValue: string|integer|boolean|double (The value of the configuration setting)
output: ?

testName: setConfigurationSetting_inValidConfigurationNameBoolean
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be set)
input configurationName: boolean (false)
input configurationValue: string|integer|boolean|double (The value of the configuration setting)
output: ?

testName: setConfigurationSetting_inValidConfigurationNameUndefined
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be set)
input configurationName: undefined
input configurationValue: string|integer|boolean|double (The value of the configuration setting)
output: ?

testName: setConfigurationSetting_inValidConfigurationNameNaN
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be set)
input configurationName: NaN
input configurationValue: string|integer|boolean|double (The value of the configuration setting)
output: ?

testName: setConfigurationSetting_inValidConfigurationValueInteger
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be set)
input configurationName: string (The key of the configuration setting)
input configurationValue: integer (123)
output: ?

testName: setConfigurationSetting_inValidConfigurationValueString
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be set)
input configurationName: string (The key of the configuration setting)
input configurationValue: boolean (false)
output: ?

testName: setConfigurationSetting_inValidConfigurationValueUndefined
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be set)
input configurationName: string (The key of the configuration setting)
input configurationValue: undefined
output: ?

testName: setConfigurationSetting_inValidConfigurationValueNaN
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be set)
input configurationName: string (The key of the configuration setting)
input configurationValue: NaN
output: ?

testName: setConfigurationSetting_inValidAllUndefined
input configurationNamespace: undefined
input configurationName: undefined
input configurationValue: undefined
output: ?

testName: setConfigurationSetting_inValidAllNaN
input configurationNamespace: NaN
input configurationName: NaN
input configurationValue: NaN
output: ?
--------------------------------------------------------------------------------
testName: setPluginConfigurationSetting_validData
input dataStructure: object (The input data structure upon which the configuration setting should be set and then returned)
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be set)
input configurationName: string (The key of the configuration setting)
input configurationValue: string|integer|boolean|double (The value of the configuration setting)
output: object (The modified input object with the new configuration value added in the appropriate location)

testName: setPluginConfigurationSetting_inValidDataStructureString
input dataStructure: string (dfxg24346dfg)
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be set)
input configurationName: string (The key of the configuration setting)
input configurationValue: string|integer|boolean|double (The value of the configuration setting)
output: ?

testName: setPluginConfigurationSetting_inValidConfigurationNamespaceString
input dataStructure: object (The input data structure upon which the configuration setting should be set and then returned)
input configurationNamespace: string (dfxg24346dfg)
input configurationName: string (The key of the configuration setting)
input configurationValue: string|integer|boolean|double (The value of the configuration setting)
output: ?

testName: setPluginConfigurationSetting_inValidConfigurationnameString
input dataStructure: object (The input data structure upon which the configuration setting should be set and then returned)
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be set)
input configurationName: string (dfxg24346dfg)
input configurationValue: string|integer|boolean|double (The value of the configuration setting)
output: ?

testName: setPluginConfigurationSetting_inValidConfigurationValueString
input dataStructure: object (The input data structure upon which the configuration setting should be set and then returned)
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be set)
input configurationName: string (The key of the configuration setting)
input configurationValue: string|integer|boolean|double (dfxg24346dfg)
output: ?

testName: setPluginConfigurationSetting_inValidDataStructureInteger
input dataStructure: integer (123)
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be set)
input configurationName: string (The key of the configuration setting)
input configurationValue: string|integer|boolean|double (The value of the configuration setting)
output: ?

testName: setPluginConfigurationSetting_inValidDataStructureBoolean
input dataStructure: boolean (false)
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be set)
input configurationName: string (The key of the configuration setting)
input configurationValue: string|integer|boolean|double (The value of the configuration setting)
output: ?

testName: setPluginConfigurationSetting_inValidDataStructureUndefined
input dataStructure: undefined
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be set)
input configurationName: string (The key of the configuration setting)
input configurationValue: string|integer|boolean|double (The value of the configuration setting)
output: ?

testName: setPluginConfigurationSetting_inValidDataStructureNaN
input dataStructure: NaN
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be set)
input configurationName: string (The key of the configuration setting)
input configurationValue: string|integer|boolean|double (The value of the configuration setting)
output: ?

testName: setPluginConfigurationSetting_inValidConfigurationNamespaceInteger
input dataStructure: object (The input data structure upon which the configuration setting should be set and then returned)
input configurationNamespace: integer (123)
input configurationName: string (The key of the configuration setting)
input configurationValue: string|integer|boolean|double (The value of the configuration setting)
output: ?

testName: setPluginConfigurationSetting_inValidConfigurationNamespaceBoolean
input dataStructure: object (The input data structure upon which the configuration setting should be set and then returned)
input configurationNamespace: boolean (false)
input configurationName: string (The key of the configuration setting)
input configurationValue: string|integer|boolean|double (The value of the configuration setting)
output: ?

testName: setPluginConfigurationSetting_inValidConfigurationNamespaceUndefined
input dataStructure: object (The input data structure upon which the configuration setting should be set and then returned)
input configurationNamespace: undefined
input configurationName: string (The key of the configuration setting)
input configurationValue: string|integer|boolean|double (The value of the configuration setting)
output: ?

testName: setPluginConfigurationSetting_inValidConfigurationNamespaceNaN
input dataStructure: object (The input data structure upon which the configuration setting should be set and then returned)
input configurationNamespace: NaN
input configurationName: string (The key of the configuration setting)
input configurationValue: string|integer|boolean|double (The value of the configuration setting)
output: ?

testName: setPluginConfigurationSetting_inValidConfigurationNameInteger
input dataStructure: object (The input data structure upon which the configuration setting should be set and then returned)
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be set)
input configurationName: integer (123)
input configurationValue: string|integer|boolean|double (The value of the configuration setting)
output: ?

testName: setPluginConfigurationSetting_inValidConfigurationNameBoolean
input dataStructure: object (The input data structure upon which the configuration setting should be set and then returned)
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be set)
input configurationName: boolean (false)
input configurationValue: string|integer|boolean|double (The value of the configuration setting)
output: ?

testName: setPluginConfigurationSetting_inValidConfigurationNameUndefined
input dataStructure: object (The input data structure upon which the configuration setting should be set and then returned)
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be set)
input configurationName: undefined
input configurationValue: string|integer|boolean|double (The value of the configuration setting)
output: ?

testName: setPluginConfigurationSetting_inValidConfigurationNameNaN
input dataStructure: object (The input data structure upon which the configuration setting should be set and then returned)
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be set)
input configurationName: NaN
input configurationValue: string|integer|boolean|double (The value of the configuration setting)
output: ?

testName: setPluginConfigurationSetting_inValidConfigurationValueInteger
input dataStructure: object (The input data structure upon which the configuration setting should be set and then returned)
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be set)
input configurationName: string (The key of the configuration setting)
input configurationValue: integer (123)
output: ?

testName: setPluginConfigurationSetting_inValidConfigurationValueBoolean
input dataStructure: object (The input data structure upon which the configuration setting should be set and then returned)
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be set)
input configurationName: string (The key of the configuration setting)
input configurationValue: boolean (false)
output: ?

testName: setPluginConfigurationSetting_inValidConfigurationValueUndefined
input dataStructure: object (The input data structure upon which the configuration setting should be set and then returned)
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be set)
input configurationName: string (The key of the configuration setting)
input configurationValue: undefined
output: ?

testName: setPluginConfigurationSetting_inValidConfigurationValueNaN
input dataStructure: object (The input data structure upon which the configuration setting should be set and then returned)
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be set)
input configurationName: string (The key of the configuration setting)
input configurationValue: NaN
output: ?

testName: setPluginConfigurationSetting_inValidAllUndefined
input dataStructure: undefined
input configurationNamespace: undefined
input configurationName: undefined
input configurationValue: undefined
output: ?

testName: setPluginConfigurationSetting_inValidAllNaN
input dataStructure: NaN
input configurationNamespace: NaN
input configurationName: NaN
input configurationValue: NaN
output: ?
--------------------------------------------------------------------------------
testName: getConfigurationSetting_validData
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be found)
input configurationName: string (The key of the configuration setting)
output: string|integer|boolean|double (The value of whatever was stored in the D[configuration])

testName: getConfigurationSetting_inValidConfigurationNamespaceString
input configurationNamespace: string (dfxg24346dfg)
input configurationName: string (The key of the configuration setting)
output: ?

testName: getConfigurationSetting_inValidConfigurationNameString
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be found)
input configurationName: string (dfxg24346dfg)
output: ?

testName: getConfigurationSetting_inValidConfigurationNamespaceInteger
input configurationNamespace: integer (123)
input configurationName: string (The key of the configuration setting)
output: ?

testName: getConfigurationSetting_inValidConfigurationNamespaceBoolean
input configurationNamespace: boolean (false)
input configurationName: string (The key of the configuration setting)
output: ?

testName: getConfigurationSetting_inValidConfigurationNameInteger
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be found)
input configurationName: integer (123)
output: ?

testName: getConfigurationSetting_inValidConfigurationNameBoolean
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be found)
input configurationName: boolean (false)
output: ?

testName: getConfigurationSetting_inValidConfigurationNamespaceUndefined
input configurationNamespace: undefined
input configurationName: string (The key of the configuration setting)
output: ?

testName: getConfigurationSetting_inValidConfigurationNamespaceNaN
input configurationNamespace: NaN
input configurationName: string (The key of the configuration setting)
output: ?

testName: getConfigurationSetting_inValidConfigurationNameUndefiend
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be found)
input configurationName: undefined
output: ?

testName: getConfigurationSetting_inValidConfigurationNameNaN
input configurationNamespace: string (The path in the configuration JSON object where the configuration setting should be found)
input configurationName: NaN
output: ?
--------------------------------------------------------------------------------
testName: processConfigurationNameRules_validData
input fullyQualifiedName: string (The fully qualified name with the namespace included)
output: string (The name of the configuration setting without the namespace)

testName: processConfigurationNameRules_inValidProcessConfigurationNameRulesString
input fullyQualifiedName: string (dfxg24346dfg)
output: ?

testName: processConfigurationNameRules_inValidProcessConfigurationNameRulesInteger
input fullyQualifiedName: integer (123)
output: ?

testName: processConfigurationNameRules_inValidProcessConfigurationNameRulesBoolean
input fullyQualifiedName: boolean (false)
output: ?

testName: processConfigurationNameRules_inValidProcessConfigurationNameRulesUndefined
input fullyQualifiedName: undefined
output: ?

testName: processConfigurationNameRules_inValidProcessConfigurationNameRulesNaN
input fullyQualifiedName: NaN
output: ?
--------------------------------------------------------------------------------
testName: processConfigurationNamespaceRules_validData
input fullyQualifiedName: string (The fully qualified name with the namespace included)
output: string (The namespace of the configuration setting, without the configuration name)

testName: processConfigurationNamespaceRules_inValidProcessConfigurationNameRulesString
input fullyQualifiedName: string (dfxg24346dfg)
output: ?

testName: processConfigurationNamespaceRules_inValidProcessConfigurationNameRulesInteger
input fullyQualifiedName: integer (123)
output: ?

testName: processConfigurationNamespaceRules_inValidProcessConfigurationNameRulesBoolean
input fullyQualifiedName: boolean (false)
output: ?

testName: processConfigurationNamespaceRules_inValidProcessConfigurationNameRulesUndefined
input fullyQualifiedName: undefined
output: ?

testName: processConfigurationNamespaceRules_inValidProcessConfigurationNameRulesNaN
input fullyQualifiedName: NaN
output: ?
--------------------------------------------------------------------------------
testName: processConfigurationValueRules_validData
input name: string (The name of the configuration variable, without the namespace)
input value: string (The value of the configuration variable)
output: string|boolean|integer|float|object (A value that is appropriately processed)

testName: processConfigurationValueRules_inValidNameString
input name: string (dfxg24346dfg)
input value: string (The value of the configuration variable)
output: ?

testName: processConfigurationValueRules_inValidValueString
input name: string (The name of the configuration variable, without the namespace)
input value: string (dfxg24346dfg)
output: ?

testName: processConfigurationValueRules_inValidNameInteger
input name: integer (123)
input value: string (The value of the configuration variable)
output: ?

testName: processConfigurationValueRules_inValidNameBoolean
input name: boolean (false)
input value: string (The value of the configuration variable)
output: ?

testName: processConfigurationValueRules_inValidValueInteger
input name: string (The name of the configuration variable, without the namespace)
input value: integer (123)
output: ?

testName: processConfigurationValueRules_inValidValueBoolean
input name: string (The name of the configuration variable, without the namespace)
input value: boolean (false)
output: ?

testName: processConfigurationValueRules_inValidNameUndefined
input name: undefined
input value: string (The value of the configuration variable)
output: ?

testName: processConfigurationValueRules_inValidNameNaN
input name: NaN
input value: string (The value of the configuration variable)
output: ?

testName: processConfigurationValueRules_inValidValueUndefined
input name: string (The name of the configuration variable, without the namespace)
input value: undefined
output: ?

testName: processConfigurationValueRules_inValidValueNaN
input name: string (The name of the configuration variable, without the namespace)
input value: NaN
output: ?
--------------------------------------------------------------------------------
testName: getParentConfigurationNamespaceObject_validData
input configurationNamespace: string (The fully qualified path in the configuration JSON object where the configuration setting should be found)
input optionalFunctionNameAppendix: string (An optional function name appendix that could potentially be added to the end of the function name)
output: object|boolean (The parent of the object found at the specified namespace address in the configuration data object, or False if nothing was found)

testName: getParentConfigurationNamespaceObject_inValidConfigurationNamespaceString
input configurationNamespace: string (dfxg24346dfg)
input optionalFunctionNameAppendix: string (An optional function name appendix that could potentially be added to the end of the function name)
output: ?

testName: getParentConfigurationNamespaceObject_inValidOptionalFunctionNameAppendixString
input configurationNamespace: string (The fully qualified path in the configuration JSON object where the configuration setting should be found)
input optionalFunctionNameAppendix: string (dfxg24346dfg)
output: ?

testName: getParentConfigurationNamespaceObject_inValidConfigurationNamespaceInteger
input configurationNamespace: integer (123)
input optionalFunctionNameAppendix: string (An optional function name appendix that could potentially be added to the end of the function name)
output: ?

testName: getParentConfigurationNamespaceObject_inValidConfigurationNamespaceBoolean
input configurationNamespace: boolean (false)
input optionalFunctionNameAppendix: string (An optional function name appendix that could potentially be added to the end of the function name)
output: ?

testName: getParentConfigurationNamespaceObject_inValidOptionalFunctionNameAppendixInteger
input configurationNamespace: string (The fully qualified path in the configuration JSON object where the configuration setting should be found)
input optionalFunctionNameAppendix: integer (123)
output: ?

testName: getParentConfigurationNamespaceObject_inValidOptionalFunctionNameAppendixBoolean
input configurationNamespace: string (The fully qualified path in the configuration JSON object where the configuration setting should be found)
input optionalFunctionNameAppendix: boolean (false)
output: ?

testName: getParentConfigurationNamespaceObject_inValidConfigurationNamespaceUndefined
input configurationNamespace: undefined
input optionalFunctionNameAppendix: string (An optional function name appendix that could potentially be added to the end of the function name)
output: ?

testName: getParentConfigurationNamespaceObject_inValidConfigurationNamespaceNaN
input configurationNamespace: NaN
input optionalFunctionNameAppendix: string (An optional function name appendix that could potentially be added to the end of the function name)
output: ?

testName: getParentConfigurationNamespaceObject_inValidOptionalFunctionNameAppendixUndefined
input configurationNamespace: string (The fully qualified path in the configuration JSON object where the configuration setting should be found)
input optionalFunctionNameAppendix: undefined
output: ?

testName: getParentConfigurationNamespaceObject_inValidOptionalFunctionNameAppendixNaN
input configurationNamespace: string (The fully qualified path in the configuration JSON object where the configuration setting should be found)
input optionalFunctionNameAppendix: NaN
output: ?
--------------------------------------------------------------------------------
testName: getConfigurationNamespaceObject_validData
input configurationNamespace: array<string> (The path in the configuration JSON object where the configuration setting should be set, or returned)
output: object|boolean (The object found at the specified namespace address in the configuration data object, or False if nothing was found)

testName: getConfigurationNamespaceObject_inValidConfigurationNamespaceString
input configurationNamespace: string (dfxg24346dfg)
output: ?

testName: getConfigurationNamespaceObject_inValidConfigurationNamespaceInteger
input configurationNamespace: integer (123)
output: ?

testName: getConfigurationNamespaceObject_inValidConfigurationNamespaceBoolean
input configurationNamespace: boolean (false)
output: ?

testName: getConfigurationNamespaceObject_inValidConfigurationNamespaceUndefined
input configurationNamespace: undefined
output: ?

testName: getConfigurationNamespaceObject_inValidConfigurationNamespaceNaN
input configurationNamespace: NaN
output: ?
--------------------------------------------------------------------------------
testName: getPluginConfigurationNamespaceObject_validData
input dataStructure: object (The input data structure upon which the configuration setting should be set and then returned)
input configurationNamespace: object|boolean (The object found at the specified namespace address in the input data structure configuration data object, or False if nothing was found)
output: object|boolean (The object found at the specified plugin namespace address in the configuration data object, or False if nothing was found)

testName: getPluginConfigurationNamespaceObject_inValidDataStructureString
input dataStructure: string (dfxg24346dfg)
input configurationNamespace: object|boolean (The object found at the specified namespace address in the input data structure configuration data object, or False if nothing was found)
output: ?

testName: getPluginConfigurationNamespaceObject_inValidConfigurationNamespaceString
input dataStructure: object (The input data structure upon which the configuration setting should be set and then returned)
input configurationNamespace: string (dfxg24346dfg)
output: ?

testName: getPluginConfigurationNamespaceObject_inValidDataStructureInteger
input dataStructure: integer (123)
input configurationNamespace: object|boolean (The object found at the specified namespace address in the input data structure configuration data object, or False if nothing was found)
output: ?

testName: getPluginConfigurationNamespaceObject_inValidDataStructureBoolean
input dataStructure: boolean (false)
input configurationNamespace: object|boolean (The object found at the specified namespace address in the input data structure configuration data object, or False if nothing was found)
output: ?

testName: getPluginConfigurationNamespaceObject_inValidConfigurationNamespaceInteger
input dataStructure: object (The input data structure upon which the configuration setting should be set and then returned)
input configurationNamespace: integer (123)
output: ?

testName: getPluginConfigurationNamespaceObject_inValidConfigurationNamespaceBoolean
input dataStructure: object (The input data structure upon which the configuration setting should be set and then returned)
input configurationNamespace: boolean (false)
output: ?

testName: getPluginConfigurationNamespaceObject_inValidDataStructureUndefined
input dataStructure: undefined
input configurationNamespace: object|boolean (The object found at the specified namespace address in the input data structure configuration data object, or False if nothing was found)
output: ?

testName: getPluginConfigurationNamespaceObject_inValidDataStructureNaN
input dataStructure: NaN
input configurationNamespace: object|boolean (The object found at the specified namespace address in the input data structure configuration data object, or False if nothing was found)
output: ?

testName: getPluginConfigurationNamespaceObject_inValidConfigurationNamespaceUndefined
input dataStructure: object (The input data structure upon which the configuration setting should be set and then returned)
input configurationNamespace: undefined
output: ?

testName: getPluginConfigurationNamespaceObject_inValidConfigurationNamespaceNaN
input dataStructure: object (The input data structure upon which the configuration setting should be set and then returned)
input configurationNamespace: NaN
output: ?
--------------------------------------------------------------------------------
testName: addPluginConfigurationData_validData
input pluginName: string (The name of the current plugin these configuration settings belong to)
input pluginConfigData: object (A JSON object that contains all of the configuration settings for the current plugin)
output: boolean (True or False to indicate if the merge was successful or not)

testName: addPluginConfigurationData_inValidPluginNameString
input pluginName: string (dfxg24346dfg)
input pluginConfigData: object (A JSON object that contains all of the configuration settings for the current plugin)
output: ?

testName: addPluginConfigurationData_inValidPluginConfigDataString
input pluginName: string (The name of the current plugin these configuration settings belong to)
input pluginConfigData: string (dfxg24346dfg)
output: ?

testName: addPluginConfigurationData_inValidPluginNameInteger
input pluginName: integer (123)
input pluginConfigData: object (A JSON object that contains all of the configuration settings for the current plugin)
output: ?

testName: addPluginConfigurationData_inValidPluginNameBoolean
input pluginName: boolean (false)
input pluginConfigData: object (A JSON object that contains all of the configuration settings for the current plugin)
output: ?

testName: addPluginConfigurationData_inValidPluginConfigDataInteger
input pluginName: string (The name of the current plugin these configuration settings belong to)
input pluginConfigData: integer (123)
output: ?

testName: addPluginConfigurationData_inValidPluginConfigDataBoolean
input pluginName: string (The name of the current plugin these configuration settings belong to)
input pluginConfigData: boolean (false)
output: ?

testName: addPluginConfigurationData_inValidPluginNameUndefined
input pluginName: undefined
input pluginConfigData: object (A JSON object that contains all of the configuration settings for the current plugin)
output: ?

testName: addPluginConfigurationData_inValidPluginNameNaN
input pluginName: NaN
input pluginConfigData: object (A JSON object that contains all of the configuration settings for the current plugin)
output: ?

testName: addPluginConfigurationData_inValidPluginConfigDataUndefined
input pluginName: string (The name of the current plugin these configuration settings belong to)
input pluginConfigData: undefined
output: ?

testName: addPluginConfigurationData_inValidPluginConfigDataNaN
input pluginName: string (The name of the current plugin these configuration settings belong to)
input pluginConfigData: NaN
output: ?
--------------------------------------------------------------------------------
testName: getAmbiguousDataElement_validData
input dataSource: object (The source data where the data element should be captured from)
input possibleDataNamesArray: array<string> (An array of possible names the could be stored under)
output: string|integer|boolean|float|object (Whatever data element that was found that matches one of the input keys)

testName: getAmbiguousDataElement_inValidDataSourceString
input dataSource: string (dfxg24346dfg)
input possibleDataNamesArray: array<string> (An array of possible names the could be stored under)
output: ?

testName: getAmbiguousDataElement_inValidPossibleDataNamesArrayString
input dataSource: object (The source data where the data element should be captured from)
input possibleDataNamesArray: string (dfxg24346dfg)
output: ?

testName: getAmbiguousDataElement_inValidDataSourceInteger
input dataSource: integer (123)
input possibleDataNamesArray: array<string> (An array of possible names the could be stored under)
output: ?

testName: getAmbiguousDataElement_inValidDataSourceBoolean
input dataSource: boolean (false)
input possibleDataNamesArray: array<string> (An array of possible names the could be stored under)
output: ?

testName: getAmbiguousDataElement_inValidPossibleDataNamesArrayInteger
input dataSource: object (The source data where the data element should be captured from)
input possibleDataNamesArray: integer (123)
output: ?

testName: getAmbiguousDataElement_inValidPossibleDataNamesArrayBoolean
input dataSource: object (The source data where the data element should be captured from)
input possibleDataNamesArray: boolean (false)
output: ?

testName: getAmbiguousDataElement_inValidDataSourceUndefined
input dataSource: undefined
input possibleDataNamesArray: array<string> (An array of possible names the could be stored under)
output: ?

testName: getAmbiguousDataElement_inValidDataSourceNaN
input dataSource: NaN
input possibleDataNamesArray: array<string> (An array of possible names the could be stored under)
output: ?

testName: getAmbiguousDataElement_inValidPossibleDataNamesArrayUndefiend
input dataSource: object (The source data where the data element should be captured from)
input possibleDataNamesArray: undefined
output: ?

testName: getAmbiguousDataElement_inValidPossibleDataNamesArrayNaN
input dataSource: object (The source data where the data element should be captured from)
input possibleDataNamesArray: NaN
output: ?