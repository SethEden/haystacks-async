description: Test plan for auxilaryArrayParsing.js


--------------------------------------------------------------------------------
testName: parseColorRangeInputs_validDataString
input inputData: string|integer (The number in either numeric or string format that represents the minimum range that should be used to generate the random color)
input inputMetaData: string|integer (The number in either numeric or string format that represents the maximum range that should be used to generate the random color)
output: array<integer> (The minimum and maximum values returned in an array)

testName: parseColorRangeInputs_validDataInputDataString
input inputData: string (dfxg24346dfg)
input inputMetaData: string|integer (The number in either numeric or string format that represents the maximum range that should be used to generate the random color) (testDataString)
output: ?

testName: parseColorRangeInputs_validDataInputMetaDataString
input inputData: string|integer (The number in either numeric or string format that represents the minimum range that should be used to generate the random color) (testDataString)
input inputMetaData: string (dfxg24346dfg)
output: ?

testName: parseColorRangeInputs_validDataInputDataInteger
input inputData: integer (23456)
input inputMetaData: string|integer (The number in either numeric or string format that represents the maximum range that should be used to generate the random color) (testDataInteger)
output: ?

testName: parseColorRangeInputs_validDataInputDataBoolean
input inputData: boolean (false)
input inputMetaData: string|integer (The number in either numeric or string format that represents the maximum range that should be used to generate the random color) (testDataInteger)
output: ?

testName: parseColorRangeInputs_validDataInputMetaDataInteger
input inputData: string|integer (The number in either numeric or string format that represents the minimum range that should be used to generate the random color) (testDataInteger)
input inputMetaData: integer (23456)
output: ?

testName: parseColorRangeInputs_validDataInputMetaDataBoolean
input inputData: string|integer (The number in either numeric or string format that represents the minimum range that should be used to generate the random color) (testDataInteger)
input inputMetaData: boolean (false)
output: ?

testName: parseColorRangeInputs_inValidInputDataUndefined
input inputData: undefined
input inputMetaData: string|integer (The number in either numeric or string format that represents the maximum range that should be used to generate the random color) (inValidDataToStoreUndefined)
output: ?

testName: parseColorRangeInputs_inValidInputDataNaN
input inputData: NaN
input inputMetaData: string|integer (The number in either numeric or string format that represents the maximum range that should be used to generate the random color) (inValidDataToStoreNaN)
output: ?

testName: parseColorRangeInputs_inValidInputMetaDataUndefined
input inputData: string|integer (The number in either numeric or string format that represents the minimum range that should be used to generate the random color) (inValidDataToStoreUndefined)
input inputMetaData: undefined
output: ?

testName: parseColorRangeInputs_inValidInputMetaDataNaN
input inputData: string|integer (The number in either numeric or string format that represents the minimum range that should be used to generate the random color) (inValidDataToStoreNaN)
input inputMetaData: NaN
output: ?
--------------------------------------------------------------------------------
testName: getNamedColorDataArray_validData
input inputData: string (The name of the color that should be looked up)
input inputMetaData: array<integer> (A default array, if the color isn't found)
output: array<integer> (An array of integers that represent RGB values)

testName: getNamedColorDataArray_inValidInputDataString
input inputData: string (dfxg24346dfg)
input inputMetaData: array<integer> (A default array, if the color isn't found)
output: ?

testName: getNamedColorDataArray_inValidInputMetaDataString
input inputData: string (The name of the color that should be looked up)
input inputMetaData: string (&)
output: ?

testName: getNamedColorDataArray_inValidInputDataInteger
input inputData: integer (123)
input inputMetaData: array<integer> (A default array, if the color isn't found)
output: ?

testName: getNamedColorDataArray_inValidInputDataBoolean
input inputData: boolean (false)
input inputMetaData: array<integer> (A default array, if the color isn't found)
output: ?

testName: getNamedColorDataArray_inValidInputMetaDataInteger
input inputData: string (The name of the color that should be looked up)
input inputMetaData: integer (123)
output: ?

testName: getNamedColorDataArray_inValidInputMetaDataBoolean
input inputData: string (The name of the color that should be looked up)
input inputMetaData: boolean (false)
output: ?

testName: getNamedColorDataArray_inValidInputDataUndefined
input inputData: undefined
input inputMetaData: array<integer> (A default array, if the color isn't found)
output: ?

testName: getNamedColorDataArray_inValidInputDataNaN
input inputData: NaN
input inputMetaData: array<integer> (A default array, if the color isn't found)
output: ?

testName: getNamedColorDataArray_inValidInputMetaDataUndefined
input inputData: string (The name of the color that should be looked up)
input inputMetaData: undefined
output: ?

testName: getNamedColorDataArray_inValidInputMetaDataNaN
input inputData: string (The name of the color that should be looked up)
input inputMetaData: NaN
output: ?
--------------------------------------------------------------------------------
testName: doesArrayContainValue_validDataString
input inputData: array<array<string|integer|boolean|float|object>,string|integer|boolean|float|object> (An array that contains the array that should be searched and the value that should be searched for in the array)
input inputMetaData: function (The function that should be used to do the search)
output: boolean (True or False to indicate if the value was found in the array or not found)

testName: doesArrayContainValue_validDataInputDataString
input inputData: string (dfxg24346dfg)
input inputMetaData: function (The function that should be used to do the search) (testDataString)
output: ?

testName: doesArrayContainValue_validDataInputDataInteger
input inputData: integer (23456)
input inputMetaData: function (The function that should be used to do the search) (testDataInteger)
output: ?

testName: doesArrayContainValue_validDataInputDataBoolean
input inputData: boolean (false)
input inputMetaData: function (The function that should be used to do the search) (testDataBoolean)
output: ?

testName: doesArrayContainValue_inValidDataStorageInputMetaDataInteger
input inputData: array<array<string|integer|boolean|float|object>,string|integer|boolean|float|object> (An array that contains the array that should be searched and the value that should be searched for in the array)
input inputMetaData: integer (4567)
output: ?

testName: doesArrayContainValue_inValidDataStorageInputMetaDataBoolean
input inputData: array<array<string|integer|boolean|float|object>,string|integer|boolean|float|object> (An array that contains the array that should be searched and the value that should be searched for in the array)
input inputMetaData: boolean (false)
output: ?

testName: doesArrayContainValue_validDataInputDataObject
input inputData: object ({"constants":"c,const","Generator":"g,gen,genrtr","List":"l,lst"})
input inputMetaData: function (The function that should be used to do the search) (testDataObject)
output: ?

testName: doesArrayContainValue_validDataInputMetaDataFunction
input inputData: array<array<string|integer|boolean|float|object>,string|integer|boolean|float|object> (An array that contains the array that should be searched and the value that should be searched for in the array)
input inputMetaData: function ([C:\haystacks\test\unitTest\testData\functionTest.js - doesArrayContainValueTestFunction])
output: ?

testName: doesArrayContainValue_inValidInputDataUndefined
input inputData: undefined
input inputMetaData: function (The function that should be used to do the search)
output: ?

testName: doesArrayContainValue_inValidInputDataNaN
input inputData: NaN
input inputMetaData: function (The function that should be used to do the search)
output: ?

testName: doesArrayContainValue_inValidInputMetaDataUndefined
input inputData: array<array<string|integer|boolean|float|object>,string|integer|boolean|float|object> (An array that contains the array that should be searched and the value that should be searched for in the array)
input inputMetaData: undefined
output: ?

testName: doesArrayContainValue_inValidInputMetaDataNaN
input inputData: array<array<string|integer|boolean|float|object>,string|integer|boolean|float|object> (An array that contains the array that should be searched and the value that should be searched for in the array)
input inputMetaData: NaN
output: ?
