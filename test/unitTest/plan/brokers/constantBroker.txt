description: Test plan for constantBroker.js


testName: initializeConstantsValidationData_validData
output: ?
NOTE: Test initialization of the commands date structure.
--------------------------------------------------------------------------------
testName: generateFrameworkConstantsValidationData_validData
output: ?
NOTE: Test initialization of the commands date structure.
--------------------------------------------------------------------------------
testName: addConstantsValidationData_validData
input constantsValidationData: object (The JSON object that contains the constants validation data that should be added to the validation data for the purpose of validation)
input contextName: string (The type of data that should be added)
output: boolean (True or False to indicate if the data was added successfully or not)

testName: addConstantsValidationData_inValidConstantsValidationDataString
input constantsValidationData: string (464gsdsfae8f46)
input contextName: string (The type of data that should be added)
output: ?

testName: addConstantsValidationData_inValidContextNameString
input constantsValidationData: object (The JSON object that contains the constants validation data that should be added to the validation data for the purpose of validation)
input contextName: string (464gsdsfae8f46)
output: ?

testName: addConstantsValidationData_inValidConstantsValidationDataInteger
input constantsValidationData: integer (123)
input contextName: string (The type of data that should be added)
output: ?

testName: addConstantsValidationData_inValidConstantsValidationDataBoolean
input constantsValidationData: boolean (false)
input contextName: string (The type of data that should be added)
output: ?

testName: addConstantsValidationData_inValidContextNameInteger
input constantsValidationData: object (The JSON object that contains the constants validation data that should be added to the validation data for the purpose of validation)
input contextName: integer (123)
output: ?

testName: addConstantsValidationData_inValidContextNameBoolean
input constantsValidationData: object (The JSON object that contains the constants validation data that should be added to the validation data for the purpose of validation)
input contextName: boolean (false)
output: ?

testName: addConstantsValidationData_inValidConstantsValidationDataUndefined
input constantsValidationData: undefined
input contextName: string (The type of data that should be added)
output: ?

testName: addConstantsValidationData_inValidConstantsValidationDataNaN
input constantsValidationData: NaN
input contextName: string (The type of data that should be added)
output: ?

testName: addConstantsValidationData_inValidContextNameUndefined
input constantsValidationData: object (The JSON object that contains the constants validation data that should be added to the validation data for the purpose of validation)
input contextName: undefined
output: ?

testName: addConstantsValidationData_inValidContextNameNaN
input constantsValidationData: object (The JSON object that contains the constants validation data that should be added to the validation data for the purpose of validation)
input contextName: NaN
output: ?
--------------------------------------------------------------------------------
testName: removePluginConstantsValidationData_validData
input pluginName: string (The name of the plugin that should have its constants vaidation data removed from the D-data structure)
output: boolean (True or False to indicate if the removal of the data was completed successfully or not)

testName: removePluginConstantsValidationData_inValidPluginNameString
input pluginName: string (464gsdsfae8f46)
output: ?

testName: removePluginConstantsValidationData_inValidPluginNameInteger
input pluginName: integer (123)
output: ?

testName: removePluginConstantsValidationData_inValidPluginNameBoolean
input pluginName: boolean (false)
output: ?

testName: removePluginConstantsValidationData_inValidPluginNameUndefined
input pluginName: undefined
output: ?

testName: removePluginConstantsValidationData_inValidPluginNameNaN
input pluginName: NaN
output: ?
