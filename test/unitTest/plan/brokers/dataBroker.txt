description: Test plan for dataBroker.js


--------------------------------------------------------------------------------
testName: addPluginConfigurationData_validData
input pluginName: string (The name of the current plugin these configuration settings belong to)
input pluginConfigData: object (A JSON object that contains all of the configuration settings for the current plugin)
output: boolean (?)

testName: addPluginConfigurationData_inValidPluginNameString
input pluginName: string (464gsdsfae8f46)
input pluginConfigData: object (A JSON object that contains all of the configuration settings for the current plugin)
output: ?

testName: addPluginConfigurationData_inValidPluginConfigDataString
input pluginName: string (The name of the current plugin these configuration settings belong to)
input pluginConfigData: string (464gsdsfae8f46)
output: ?

testName: addPluginConfigurationData_inValidPluginNameInteger
input pluginName: integer (123)
input pluginConfigData: object (A JSON object that contains all of the configuration settings for the current plugin)
output: ?

testName: addPluginConfigurationData_inValidPluginNameBoolean
input pluginName: boolean (false)
input pluginConfigData: object (A JSON object that contains all of the configuration settings for the current plugin)
output: ?

testName: addPluginConfigurationData_inValidPluginConfigDataInteger
input pluginName: string (The name of the current plugin these configuration settings belong to)
input pluginConfigData: integer (123)
output: ?

testName: addPluginConfigurationData_inValidPluginConfigDataBoolean
input pluginName: string (The name of the current plugin these configuration settings belong to)
input pluginConfigData: boolean (false)
output: ?

testName: addPluginConfigurationData_inValidPluginNameUndefined
input pluginName: undefined
input pluginConfigData: object (A JSON object that contains all of the configuration settings for the current plugin)
output: ?

testName: addPluginConfigurationData_inValidPluginNameNaN
input pluginName: NaN
input pluginConfigData: object (A JSON object that contains all of the configuration settings for the current plugin)
output: ?

testName: addPluginConfigurationData_inValidPluginConfigDataUndefined
input pluginName: string (The name of the current plugin these configuration settings belong to)
input pluginConfigData: undefined
output: ?

testName: addPluginConfigurationData_inValidPluginConfigDataNaN
input pluginName: string (The name of the current plugin these configuration settings belong to)
input pluginConfigData: NaN
output: ?
--------------------------------------------------------------------------------
testName: scanDataPath_validData
input dataPath: string (The path that should be recursively scanned for files in all the folders)
output: array<string> (An array of strings that each have the full path and file name at all levels of the specified path including sub-folders)

testName: scanDataPath_inValidDataPathString
input dataPath: string (464gsdsfae8f46)
output: empty array

testName: scanDataPath_inValidDataPathNumber
input dataPath: integer (546)
output: empty array

testName: scanDataPath_inValidDataPathBoolean
input dataPath: boolean (false)
output: empty array

testName: scanDataPath_inValidDataPathUndefined
input dataPath: undefined
output: empty array

testName: scanDataPath_inValidDataPathNaN
input dataPath: NaN
output: empty array
--------------------------------------------------------------------------------
testName: findUniversalDebugConfigSetting_validData
input appConfigFilesToLoad: array<string> (The list of files for the app config files)
input frameworkConfigFilesToLoad: array<string> (The list of files for the framework config files)
output: boolean (A True or False value to indicate if debug setting value is set in either the app config system file or the framework config system file)

testName: findUniversalDebugConfigSetting_inValidAppConfigFilesToLoadString
input appConfigFilesToLoad: string (464gsdsfae8f46)
input frameworkConfigFilesToLoad: array<string> (The list of files for the framework config files)
output: ?

testName: findUniversalDebugConfigSetting_inValidFrameworkConfigFilesToLoadString
input appConfigFilesToLoad: array<string> (The list of files for the app config files)
input frameworkConfigFilesToLoad: string (464gsdsfae8f46)
output: ?

testName: findUniversalDebugConfigSetting_inValidAppConfigFilesToLoadNumber
input appConfigFilesToLoad: integer (546)
input frameworkConfigFilesToLoad: array<string> (The list of files for the framework config files)
output: ?

testName: findUniversalDebugConfigSetting_inValidAppConfigFilesToLoadBoolean
input appConfigFilesToLoad: boolean (false)
input frameworkConfigFilesToLoad: array<string> (The list of files for the framework config files)
output: ?

testName: findUniversalDebugConfigSetting_inValidFrameworkConfigFilesToLoadNumber
input appConfigFilesToLoad: array<string> (The list of files for the app config files)
input frameworkConfigFilesToLoad: integer (546)
output: ?

testName: findUniversalDebugConfigSetting_inValidFrameworkConfigFilesToLoadBoolean
input appConfigFilesToLoad: array<string> (The list of files for the app config files)
input frameworkConfigFilesToLoad: boolean (false)
output: ?

testName: findUniversalDebugConfigSetting_inValidAppConfigFilesToLoadUndefined
input appConfigFilesToLoad: undefined
input frameworkConfigFilesToLoad: array<string> (The list of files for the framework config files)
output: ?

testName: findUniversalDebugConfigSetting_inValidAppConfigFilesToLoadNaN
input appConfigFilesToLoad: NaN
input frameworkConfigFilesToLoad: array<string> (The list of files for the framework config files)
output: ?

testName: findUniversalDebugConfigSetting_inValidFrameworkConfigFilesToLoadUndefined
input appConfigFilesToLoad: array<string> (The list of files for the app config files)
input frameworkConfigFilesToLoad: undefined
output: ?

testName: findUniversalDebugConfigSetting_inValidFrameworkConfigFilesToLoadNaN
input appConfigFilesToLoad: array<string> (The list of files for the app config files)
input frameworkConfigFilesToLoad: NaN
output: ?
--------------------------------------------------------------------------------
testName: loadAllCsvData_validData
input filesToLoad: array<string> (The data structure containing all of the files to load data from)
input contextName: string (The context name that should be used when adding data to the D data structure)
output: object (The data in a JSON object after it was loaded from the file)

testName: loadAllCsvData_inValidFilesToLoadString
input filesToLoad: string (464gsdsfae8f46)
input contextName: string (The context name that should be used when adding data to the D data structure)
output: ?

testName: loadAllCsvData_inValidContextNameString
input filesToLoad: array<string> (The data structure containing all of the files to load data from)
input contextName: string (464gsdsfae8f46)
output: ?

testName: loadAllCsvData_inValidFilesToLoadNumber
input filesToLoad: integer (546)
input contextName: string (The context name that should be used when adding data to the D data structure)
output: ?

testName: loadAllCsvData_inValidFilesToLoadBoolean
input filesToLoad: boolean (false)
input contextName: string (The context name that should be used when adding data to the D data structure)
output: ?

testName: loadAllCsvData_inValidContextNameNumber
input filesToLoad: array<string> (The data structure containing all of the files to load data from)
input contextName: integer (123)
output: ?

testName: loadAllCsvData_inValidContextNameBoolean
input filesToLoad: array<string> (The data structure containing all of the files to load data from)
input contextName: boolean (false)
output: ?

testName: loadAllCsvData_inValidFilesToLoadUndefined
input filesToLoad: undefined
input contextName: string (The context name that should be used when adding data to the D data structure)
output: ?

testName: loadAllCsvData_inValidFilesToLoadNaN
input filesToLoad: NaN
input contextName: string (The context name that should be used when adding data to the D data structure)
output: ?

testName: loadAllCsvData_inValidContextNameUndefined
input filesToLoad: array<string> (The data structure containing all of the files to load data from)
input contextName: undefined
output: ?

testName: loadAllCsvData_inValidContextNameNaN
input filesToLoad: array<string> (The data structure containing all of the files to load data from)
input contextName: NaN
output: ?
--------------------------------------------------------------------------------
testName: loadedAllXmlData_validData
input filesToLoad: array<string> (The data structure containing all of the files to load data from)
input contextName: string (The context name that should be used when adding data to the D data structure)
output: object (the JSON data from system.xml)

testName: loadedAllXmlData_inValidFilesToLoadString
input filesToLoad: string (464gsdsfae8f46)
input contextName: string (The context name that should be used when adding data to the D data structure)
output: ?

testName: loadedAllXmlData_inValidContextNameString
input filesToLoad: array<string> (The data structure containing all of the files to load data from)
input contextName: string (464gsdsfae8f46)
output: ?

testName: loadedAllXmlData_inValidFilesToLoadNumber
input filesToLoad: integer (546)
input contextName: string (The context name that should be used when adding data to the D data structure)
output: ?

testName: loadedAllXmlData_inValidFilesToLoadBoolean
input filesToLoad: boolean (false)
input contextName: string (The context name that should be used when adding data to the D data structure)
output: ?

testName: loadAllXmlData_inValidContextNameNumber
input filesToLoad: array<string> (The data structure containing all of the files to load data from)
input contextName: integer (123)
output: ?

testName: loadAllXmlData_inValidContextNameBoolean
input filesToLoad: array<string> (The data structure containing all of the files to load data from)
input contextName: boolean (false)
output: ?

testName: loadedAllXmlData_inValidFilesToLoadUndefined
input filesToLoad: undefined
input contextName: string (The context name that should be used when adding data to the D data structure)
output: ?

testName: loadedAllXmlData_inValidFilesToLoadNaN
input filesToLoad: NaN
input contextName: string (The context name that should be used when adding data to the D data structure)
output: ?

testName: loadAllXmlData_inValidContextNameUndefined
input filesToLoad: array<string> (The data structure containing all of the files to load data from)
input contextName: undefined
output: ?

testName: loadAllXmlData_inValidContextNameNaN
input filesToLoad: array<string> (The data structure containing all of the files to load data from)
input contextName: NaN
output: ?
--------------------------------------------------------------------------------
testName: loadAllJsonData_validData
input filesToLoad: array<string> (The data structure containing all of the files to load data from)
input contextName: string (The context name that should be used when adding data to the D-data structure)
output: object (A JSON object that contains all fo the data that was loaded and parsed from all the input files list)

testName: loadAllJsonData_inValidFilesToLoadString
input filesToLoad: string (464gsdsfae8f46)
input contextName: string (The context name that should be used when adding data to the D-data structure)
output: ?

testName: loadAllJsonData_inValidContextNameString
input filesToLoad: array<string> (The data structure containing all of the files to load data from)
input contextName: string (464gsdsfae8f46)
output: ?

testName: loadAllJsonData_inValidFilesToLoadNumber
input filesToLoad: integer (546)
input contextName: string (The context name that should be used when adding data to the D-data structure)
output: ?

testName: loadAllJsonData_inValidFilesToLoadBoolean
input filesToLoad: boolean (false)
input contextName: string (The context name that should be used when adding data to the D-data structure)
output: ?

testName: loadAllJsonData_inValidContextNameNumber
input filesToLoad: array<string> (The data structure containing all of the files to load data from)
input contextName: integer (123)
output: ?

testName: loadAllJsonData_inValidContextNameBoolean
input filesToLoad: array<string> (The data structure containing all of the files to load data from)
input contextName: boolean (false)
output: ?

testName: loadAllJsonData_inValidFilesToLoadUndefined
input filesToLoad: undefined
input contextName: string (The context name that should be used when adding data to the D-data structure)
output: ?

testName: loadAllJsonData_inValidFilesToLoadNaN
input filesToLoad: NaN
input contextName: string (The context name that should be used when adding data to the D-data structure)
output: ?

testName: loadAllJsonData_inValidContextNameUndefined
input filesToLoad: array<string> (The data structure containing all of the files to load data from)
input contextName: undefined
output: ?

testName: loadAllJsonData_inValidContextNameNaN
input filesToLoad: array<string> (The data structure containing all of the files to load data from)
input contextName: NaN
output: ?
--------------------------------------------------------------------------------
testName: processCsvData_validData
input data: object (A JSON object that contains all of the data loaded from a CSV file)
input contextName: string (The name that should be used when adding the objects to the D data structure for data-sharing)
output: object (the clean and ready to go JSON data from test.csv)

testName: processCsvData_inValidDataString
input data: string (464gsdsfae8f46)
input contextName: string (The name that should be used when adding the objects to the D data structure for data-sharing)
output: ?

testName: processCsvData_inValidContextNameString
input data: object (A JSON object that contains all of the data loaded from a CSV file)
input contextName: string (464gsdsfae8f46)
output: ?

testName: processCsvData_inValidDataNumber
input data: integer (546)
input contextName: string (The name that should be used when adding the objects to the D data structure for data-sharing)
output: ?

testName: processCsvData_inValidDataBoolean
input data: boolean (false)
input contextName: string (The name that should be used when adding the objects to the D data structure for data-sharing)
output: ?

testName: processCsvData_inValidContextNameNumber
input data: object (A JSON object that contains all of the data loaded from a CSV file)
input contextName: integer (123)
output: ?

testName: processCsvData_inValidContextNameBoolean
input data: object (A JSON object that contains all of the data loaded from a CSV file)
input contextName: boolean (false)
output: ?

testName: processCsvData_inValidDataUndefined
input data: undefined
input contextName: string (The name that should be used when adding the objects to the D data structure for data-sharing)
output: ?

testName: processCsvData_inValidDataNaN
input data: NaN
input contextName: string (The name that should be used when adding the objects to the D data structure for data-sharing)
output: ?

testName: processCsvData_inValidContextNameUndefined
input data: object (A JSON object that contains all of the data loaded from a CSV file)
input contextName: undefined
output: ?

testName: processCsvData_inValidContextNameNaN
input data: object (A JSON object that contains all of the data loaded from a CSV file)
input contextName: NaN
output: ?
--------------------------------------------------------------------------------
testName: preprocessJsonFile_validData
input filesToLoad: string (The fully qualified path to the file that should be loaded)
output: object (The JSON data object that was loaded from the specified JSON data file)

testName: preprocessJsonFile_inValidFilesToLoadString
input filesToLoad: string (464gsdsfae8f46)
output: ?

testName: preprocessJsonFile_inValidFilesToLoadNumber
input filesToLoad: integer (546)
output: ?

testName: preprocessJsonFile_inValidFilesToLoadBoolean
input filesToLoad: boolean (false)
output: ?

testName: preprocessJsonFile_inValidFilesToLoadUndefined
input filesToLoad: Undefined
output: ?

testName: preprocessJsonFile_inValidFilesToLoadNaN
input filesToLoad: NaN
output: ?
--------------------------------------------------------------------------------
testName: writeJsonDataToFile_validData
input fileToSaveTo: string (The full path to the file that should have the data written to it)
input dataToWriteOut: object
output: file written to disk

testName: writeJsonDataToFile_inValidFileToSaveToString
input fileToSaveTo: string (464gsdsfae8f46)
input dataToWriteOut: object (The JSON data that should be written out to the specified JSON file)
output: ?

testName: writeJsonDataToFile_inValidDataToWriteString
input fileToSaveTo: string (The full path to the file that should have the data written to it)
input dataToWriteOut: string (464gsdsfae8f46)
output: ?

testName: writeJsonDataToFile_inValidFileToSaveToNumber
input fileToSaveTo: integer (546)
input dataToWriteOut: object (The JSON data that should be written out to the specified JSON file)
output: ?

testName: writeJsonDataToFile_inValidFileToSaveToBoolean
input fileToSaveTo: boolean (false)
input dataToWriteOut: object (The JSON data that should be written out to the specified JSON file)
output: ?

testName: writeJsonDataToFile_inValidDataToWriteNumber
input fileToSaveTo: string (The full path to the file that should have the data written to it)
input dataToWriteOut: integer (123)
output: ?

testName: writeJsonDataToFile_inValidDataToWriteBoolean
input fileToSaveTo: string (The full path to the file that should have the data written to it)
input dataToWriteOut: boolean (false)
output: ?

testName: writeJsonDataToFile_inValidFileToSaveToUndefined
input fileToSaveTo: undefined
input dataToWriteOut: object (The JSON data that should be written out to the specified JSON file)
output: ?

testName: writeJsonDataToFile_inValidFileToSaveToNaN
input fileToSaveTo: NaN
input dataToWriteOut: object (The JSON data that should be written out to the specified JSON file)
output: ?

testName: writeJsonDataToFile_inValidDataToWriteUndefined
input fileToSaveTo: string (The full path to the file that should have the data written to it)
input dataToWriteOut: undefined
output: ?

testName: writeJsonDataToFile_inValidDataToWriteNaN
input fileToSaveTo: string (The full path to the file that should have the data written to it)
input dataToWriteOut: NaN
output: ?
----------------------------------------------------------------------------------------------------------------------------------------------------------------
testName: setupDataStorage_validData
output: data storage exists on data hive.
NOTE: Test initialization of the commands date structure.
----------------------------------------------------------------------------------------------------------------------------------------------------------------
testName: storeData_validDataString
input dataStorageContextName: string (The sub-data storage hive under-which the data should be stored)
input dataToStore: string|boolean|integer|float|array|object (The data that should be stored, in any format)
output: boolean (A True or False to indicate if the data storage was successful or not)

testName: storeData_validDataBoolean
input dataStorageContextName: string (testDataBoolean)
input dataToStore: boolean (false)
output: ?

testName: storeData_validDataInteger
input dataStorageContextName: string (The sub-data storage hive under-which the data should be stored)
input dataToStore: integer (23456)
output: ?

testName: storeData_validDataArray
input dataStorageContextName: string (The sub-data storage hive under-which the data should be stored)
input dataToStore: array ([1,2,3,4,5])
output: ?

testName: storeData_validDataObject
input dataStorageContextName: string (The sub-data storage hive under-which the data should be stored)
input dataToStore: string|boolean|integer|float|array|object (The data that should be stored, in any format)
output: ?

testName: storeData_inValidDataToStoreUndefined
input dataStorageContextName: string (The sub-data storage hive under-which the data should be stored)
input dataToStore: undefined
output: ?

testName: storeData_inValidDataToStoreNaN
input dataStorageContextName: string (The sub-data storage hive under-which the data should be stored)
input dataToStore: NaN
output: ?

testName: storeData_inValidDataStorageDataToStoreNumber
input dataStorageContextName: integer (4567)
input dataToStore: array ([1,2,3,4,5])
output: ?

testName: storeData_inValidDataStorageDataToStoreBoolean
input dataStorageContextName: boolean (false)
input dataToStore: array ([1,2,3,4,5])
output: ?
--------------------------------------------------------------------------------
testName: getData_validData
input dataStorageContextName: string (The sub-data storage hive which should be retrieved)
output: object (the data that is found, if any at the specified location on the data storage hive)

testName: getData_inValidDataStorageContextNameString
input dataStorageContextName: string (464gsdsfae8f46)
output: ?

testName: getData_inValidDataStorageContextNameNumber
input dataStorageContextName: integer (546)
output: ?

testName: getData_inValidDataStorageContextNameBoolean
input dataStorageContextName: boolean (false)
output: ?

testName: getData_inValidDataStorageContextNameUndefined
input dataStorageContextName: undefined
output: ?

testName: getData_inValidDataStorageContextNameNaN
input dataStorageContextName: NaN
output: ?
--------------------------------------------------------------------------------
testName: clearData_validData
input dataStorageContextName: string (The sub-data storage hive which should be cleared)
output: void

testName: clearData_inValidDataStorageContextNameString
input dataStorageContextName: string (464gsdsfae8f46)
output: ?

testName: clearData_inValidDataStorageContextNameNumber
input dataStorageContextName: integer (546)
output: ?

testName: clearData_inValidDataStorageContextNameBoolean
input dataStorageContextName: boolean (false)
output: ?

testName: clearData_inValidDataStorageContextNameUndefined
input dataStorageContextName: undefined
output: ?

testName: clearData_inValidDataStorageContextNameNaN
input dataStorageContextName: NaN
output: ?
--------------------------------------------------------------------------------
testName: removePluginConfigurationData_validData
input pluginName: string (The name of the plugin that should have its configuration data removed from the D-data structure)
output: boolean (True or False to indicate if the removal of the data was completed successfully or not)

testName: removePluginConfigurationData_inValidPluginNameString
input pluginName: string (464gsdsfae8f46)
output: ?

testName: removePluginConfigurationData_inValidPluginNameInteger
input pluginName: integer (123)
output: ?

testName: removePluginConfigurationData_inValidPluginNameBoolean
input pluginName: boolean (false)
output: ?

testName: removePluginConfigurationData_inValidPluginNameUndefined
input pluginName: undefined
output: ?

testName: removePluginConfigurationData_inValidPluginNameNaN
input pluginName: NaN
output: ?